apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.telecorp.dashqueue"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
//repositories {
//    mavenCentral()
//}

//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}
//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support:appcompat-v7:' + rootProject.supportLibraryVersion
    implementation 'com.android.support:support-v4:' + rootProject.supportLibraryVersion
    implementation 'com.android.support:design:' + rootProject.supportLibraryVersion
    implementation 'com.android.support:recyclerview-v7:' + rootProject.supportLibraryVersion
    implementation 'com.android.support:cardview-v7:' + rootProject.supportLibraryVersion
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.google.guava:guava:$rootProject.guavaVersion"
    implementation 'com.squareup.retrofit2:retrofit:;' + rootProject.retrofitVersion
    implementation 'com.squareup.retrofit2:adapter-rxjava2:' + rootProject.retrofitVersion
    implementation 'com.squareup.retrofit2:converter-gson:' + rootProject.retrofitVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    implementation 'com.squareup.okhttp3:okhttp:' + rootProject.okhttpVersion
    implementation 'com.squareup.okhttp3:logging-interceptor:' + rootProject.okhttpVersion
    implementation 'com.google.dagger:dagger:' + rootProject.daggerVersion
    kapt 'com.google.dagger:dagger-compiler:' + rootProject.daggerVersion
    implementation 'com.google.dagger:dagger-android:' + rootProject.daggerVersion
    implementation 'com.google.dagger:dagger-android-support:' + rootProject.daggerVersion
    kapt 'com.google.dagger:dagger-android-processor:' + rootProject.daggerVersion
    implementation 'io.reactivex.rxjava2:rxandroid:' + rootProject.rxAndroidVersion
    implementation 'io.reactivex.rxjava2:rxjava:' + rootProject.rxJavaVersion

    implementation 'com.github.bumptech.glide:glide:' + rootProject.glideVersion
    kapt 'com.github.bumptech.glide:compiler:' + rootProject.glideVersion
    implementation 'com.jakewharton:butterknife:' + rootProject.butterKnifeVersion
    kapt 'com.jakewharton:butterknife-compiler:' + rootProject.butterKnifeVersion
    implementation 'com.google.firebase:firebase-messaging:' + rootProject.firebaseVersion
    implementation 'com.google.firebase:firebase-core:' + rootProject.firebaseVersion

    implementation 'com.marcinmoskala.activitystarter:activitystarter:1.00'
    implementation 'com.marcinmoskala.activitystarter:activitystarter-kotlin:1.00'
    kapt 'com.marcinmoskala.activitystarter:activitystarter-compiler:1.00'

    implementation 'com.marcinmoskala.PreferenceHolder:preferenceholder:'+rootProject.preferenceHolderVersion
    implementation 'com.marcinmoskala.PreferenceHolder:preferenceholder-gson-serializer:'+rootProject.preferenceHolderVersion


    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'info.hoang8f:android-segmented:1.0.6'

    // Dependencies for local unit tests
    testCompile 'junit:junit:' + rootProject.junitVersion
    testCompile 'org.mockito:mockito-all:' + rootProject.mockitoVersion
    testCompile 'org.hamcrest:hamcrest-all:' + rootProject.hamcrestVersion



    androidTestCompile 'com.android.support:support-annotations:' + rootProject.supportLibraryVersion
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    // Optional -- Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:' + rootProject.hamcrestVersion
    // Optional -- UI testing with Espresso
    androidTestCompile('com.android.support.test.espresso:espresso-core:' + rootProject.espressoCoreVersion, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    androidTestCompile "com.android.support.test.espresso.idling:idling-concurrent:$rootProject.espressoCoreVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoCoreVersion"
//    // Optional -- UI testing with UI Automator
//    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'


}

apply plugin: 'com.google.gms.google-services'